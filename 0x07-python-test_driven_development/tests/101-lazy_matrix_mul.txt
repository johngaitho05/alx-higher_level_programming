===========================
How to use 101-lazy_matrix_mul.py
============================

`lazy_matrix_mul()` multiplies two matrices

::

	>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

m_a not a list

::
    >>> lazy_matrix_mul("invalid matrix", [[3, 4]])
    Traceback (most recent call last):
    TypeError: ufunc 'multiply' did not contain a loop with signature matching types dtype('<U14') dtype('<U14') dtype('<U14')

m_b not a list

::
    >>> lazy_matrix_mul([[5]], {})
    Traceback (most recent call last):
    TypeError: unsupported operand type(s) for *: 'int' and 'dict'

m_a not a list of lists

::
    >>> lazy_matrix_mul([1, 2, 3], [[3, 4]])
    Traceback (most recent call last):
    ValueError: shapes (3,) and (1,2) not aligned: 3 (dim 0) != 1 (dim 0)

m_b not a list of lists

::
    >>> lazy_matrix_mul([[]], [2, 5, [4, 5]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

m_a is empty

::
    >>> lazy_matrix_mul([[]], [[2, 3]])
    Traceback (most recent call last):
    ValueError: shapes (1,0) and (1,2) not aligned: 0 (dim 1) != 1 (dim 0)

m_b is empty

::
    >>> lazy_matrix_mul([[4, 1]], [[]])
    Traceback (most recent call last):
    ValueError: shapes (1,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

m_a contains invalid values

::
    >>> lazy_matrix_mul([[1, 3, 'H']], [[2, 3]])
    Traceback (most recent call last):
    ValueError: shapes (1,3) and (1,2) not aligned: 3 (dim 1) != 1 (dim 0)

m_b contains invalid values

::
    >>> lazy_matrix_mul([[1, 3]], [[2, 3, []]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

m_a is not a rectangle

::
    >>> lazy_matrix_mul([[1, 3], [4]], [[2, 3]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.

m_b is not a rectangle

::
    >>> lazy_matrix_mul([[1, 3]], [[2, 3, 4], [2, 4]])
    Traceback (most recent call last):
    ValueError: setting an array element with a sequence.


Incompatible matrices

::

    >>> lazy_matrix_mul([[5]], [[2, 5, 6], [3, 5, 9]])
    Traceback (most recent call last):
    ValueError: shapes (1,1) and (2,3) not aligned: 1 (dim 1) != 2 (dim 0)


Rectanglular Matrices

::

    >>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    array([[ 7, 10],
           [15, 22]])


1x matrix

::

    >>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    array([[13, 16]])


Zero matrix

::

    >>> lazy_matrix_mul([[2, 6, 9], [3, 4, 2]], [[0], [0], [0]])
    array([[0],
           [0]])

1 by 1 matrices

::

    >>> lazy_matrix_mul([[2]], [[5]])
    array([[10]])



